;;comment: each additional level of information, need its level of representation(in-package ocml)   (def-class abstract-information-object ()  ((is-about :type described-conceptual-object)));; problem: if the missing DCOs are only inferred at runtime, how can I create the AIO instances? i need to specify the slot above...   (def-class described-conceptual-object ()  ((describes-conceptual-object :type conceptual-object)   (has-type-of-description :type description-type)))   (def-class conceptual-object ()) (def-class description-type ())   (def-instance text1 abstract-information-object ((is-about introduction-to-energy description-about-matter conclusion-about-force)))   (def-instance introduction-to-energy described-conceptual-object ((describes-conceptual-object energy)  (has-type-of-description introduction)))   (def-instance description-about-matter described-conceptual-object ((describes-conceptual-object matter)  (has-type-of-description)))   (def-instance conclusion-about-force described-conceptual-object ((describes-conceptual-object force)  (has-type-of-description conclusion)))   (def-instance energy conceptual-object) (def-instance matter conceptual-object) (def-instance life conceptual-object) (def-instance foo  conceptual-object)  (def-instance introduction description-type)  (defun populate-DCOs-without-role ()  (mapc #'(lambda (x)            (eval (read-from-string (format nil "(tell (described-conceptual-object gen-description-about-~A))" x)))            (eval (read-from-string (format nil "(tell (describes-conceptual-object description-about-~A ~A))" x x))))        (findall '?x '(conceptual-object ?x))))  (populate-DCOs-without-role)